---
import { isLoggedIn } from "../utils/auth.ts";

const cookie = Astro.request.headers.get("cookie");
if (!isLoggedIn(cookie)) {
  return Astro.redirect("/login");
}

let loading = true;
let message = "";
let redirect = false;

let userData = {
  firstName: "",
  lastName: "",
  email: "",
  address: "",
  document: "",
  card: "",
  imageUrl: "",
  role: "",
};

async function getUserProfile() {
  const token = localStorage.getItem("token");
  if (!token) {
    return Astro.redirect("/login");
  }

  try {
    const res = await fetch("http://localhost:5000/api/users/profile", {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });

    if (!res.ok) throw new Error("Token inválido o expirado");

    const data = await res.json();
    userData = data;
    loading = false;
  } catch (err) {
    console.error(err);
    localStorage.removeItem("token");
    return Astro.redirect("/login");
  }
}

await getUserProfile();
---

<div class="profile-container">
  <h1>Perfil del Usuario</h1>
  {
    loading ? (
      <div>Cargando Perfil...</div>
    ) : (
      <form class="profile-form" id="profile-form">
        <div class="form-group">
          <label>Nombre</label>
          <input
            type="text"
            name="firstName"
            value={userData.firstName}
            class="form-input"
            placeholder="Nombre"
          />
        </div>

        <div class="form-group">
          <label>Apellido</label>
          <input
            type="text"
            name="lastName"
            value={userData.lastName}
            class="form-input"
            placeholder="Apellido"
          />
        </div>

        <div class="form-group">
          <label>Correo Electrónico</label>
          <input
            type="email"
            name="email"
            value={userData.email}
            class="form-input"
            placeholder="Correo Electrónico"
            disabled
          />
        </div>

        <div class="form-group">
          <label>Dirección</label>
          <input
            type="text"
            name="address"
            value={userData.address}
            class="form-input"
            placeholder="Dirección"
          />
        </div>

        <div class="form-group">
          <label>Documento</label>
          <input
            type="text"
            name="document"
            value={userData.document}
            class="form-input"
            placeholder="Documento de Identidad"
          />
        </div>

        <div class="form-group">
          <label>Tarjeta</label>
          <input
            type="text"
            name="card"
            value={userData.card}
            class="form-input"
            placeholder="Número de Tarjeta"
          />
        </div>

        <div class="form-group">
          <label>URL de la Imagen de Perfil</label>
          <input
            type="text"
            name="imageUrl"
            value={userData.imageUrl}
            class="form-input"
            placeholder="URL de Imagen de Perfil"
          />
          {userData.imageUrl && (
            <img
              src={userData.imageUrl}
              alt="Foto de Perfil"
              class="profile-image"
            />
          )}
        </div>

        <div class="form-group">
          <label>Subir imagen de perfil</label>
          <input type="file" accept="image/*" id="image-upload" />
        </div>

        <button type="submit" class="save-button" id="submit-btn">
          Guardar Cambios
        </button>
      </form>
    )
  }

  {message && <p class="message">{message}</p>}
  {redirect && <p>Redirigiendo a la página principal en 5 segundos...</p>}
</div>
<style>
  @import "../styles/profile.css";
</style>

<script>
  let message = "";
  document
    .getElementById("saveButton")!
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const form = document.getElementById("profile-form") as HTMLFormElement;
      if (!form) {
        console.error("Formulario no encontrado.");
        return;
      }
      const formData = new FormData(form);
      formData.append(
        "firstName",
        (document.getElementById("firstName") as HTMLInputElement)?.value || ""
      );
      formData.append(
        "lastName",
        (document.getElementById("lastName") as HTMLInputElement)?.value || ""
      );

      try {
        const token = localStorage.getItem("token");
        const res = await fetch("http://localhost:5000/api/users/profile", {
          method: "PUT",
          headers: { Authorization: `Bearer ${token}` },
          body: formData,
        });

        if (res.ok) {
          message = "Perfil actualizado con éxito";
          setTimeout(() => Astro.redirect("/add-product"), 5000);
        } else {
          message = `Error al actualizar el perfil: ${await res.text()}`;
        }
      } catch (error) {
        message = "Error en la conexión";
      }
      document.getElementById("message")!.innerText = message;
    });
</script>
